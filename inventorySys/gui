local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ClientToServer = ReplicatedStorage.ClickInventory

local guiHandler = {}
guiHandler.__index = guiHandler
guiHandler.instanceNumber = 0

local versionN = "1.0.0"

function guiHandler.new(object, player)
	guiHandler.instanceNumber += 1
	local self = setmetatable({}, guiHandler)
	
	self.object = object
	self.player = player
	self.name = "guiHandler"
	self.instanceID = guiHandler.instanceNumber
	
	self.inventoryUi = player.PlayerGui.inventoryUi
	
	return self
end

function guiHandler:Init()
	self:ConnectAll()
	self.object.slots = self:AddressSlots()
end

function guiHandler:ConnectAll()
	
	self.PromptPressedConnection = self.object:m_SubscribeTopic("Pressed", function(player, item, icon)
		if player == self.player then
			self:SetIcon(item, icon)
		end
	end)
	
	self.MouseClickedConnection = ClientToServer.OnServerEvent:Connect(function(player, slot, amountOfSlots)
		if player == self.player then
			self:OnMouseClicked(player, slot, amountOfSlots)
			--self.object.slots = amountOfSlots
		end
	end)
end

function guiHandler:DisconnectAll()
	self.MouseClickedConnection:Disconnect()
end

function guiHandler:AddressSlots() -- temporary function, need to re-do,
	local slotsChildren = self.inventoryUi.Main.ScrollingFrame:GetChildren()
	local amountOfSlots = {}
	local index = 0

	for _, slot in pairs(slotsChildren) do
		if slot:IsA("Frame") then
			index +=1
			amountOfSlots[index] = slot
		end
	end

	return amountOfSlots
end

function guiHandler:CheckAvailableFrame()
	for i, availableSlot in ipairs(self.object.slots) do
		if availableSlot:FindFirstChildWhichIsA("ImageLabel") then
			--warn("Found an image label")
		else
			return availableSlot
		end
	end
end

function guiHandler:SetIcon(item, icon)
	local availableSlot = self:CheckAvailableFrame()
	icon.Parent = availableSlot
end

function guiHandler:OnMouseClicked(player, slot, amountOfSlots)
	print(slot)
	print(self.object)
end

warn("InventoryUi version:", versionN)

return guiHandler
