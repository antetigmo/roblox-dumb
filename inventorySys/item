local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerStorage= game:GetService("ServerStorage")
local PlayersService = game:GetService("Players")
local CollectionService = game:GetService("CollectionService")

local ClientToServer = ReplicatedStorage.ClientToServer
local ServerToClient = ReplicatedStorage.ServerToClient
local ServerToServer = ReplicatedStorage.ServerToServer

local item = {}
item.__index = item
item.instanceNumber = 0

item.itemsActive = {}

function item.new(object, itemObject)
	item.instanceNumber += 1
	
	local self = setmetatable({}, item)
	self.object = object
	self.itemObject = itemObject
	self.name = "item"
	self.instanceID = item.instanceNumber
	
	return self
end

function item:Init()
	self:CreatePrompt(self.itemObject)
	self:Connect()
end

function item:Connect()
	self.Triggered = self.Prompt.Triggered:Connect(function(player)
		self:Press(player, self.itemObject)
	end)	
	warn("Item trigger connection.")
end

function item:CreatePrompt(item)
	local Prompt = Instance.new("ProximityPrompt")
	Prompt.HoldDuration = 0.5
	Prompt.Parent = item.Plane:FindFirstChildWhichIsA("Attachment")
	self.Prompt = Prompt
	
	return self.Prompt
end

function item:CreateHandle(item)
	local Handle = Instance.new("Part")
	Handle.Size = Vector3.new(1, 1, 1)
	Handle.Parent = item
	Handle.Name = "Handle"
	Handle.Anchored = false
	Handle.CanCollide = false
	Handle.Transparency = 1
	
	Handle.Position = item.Plane.Position
	item.WeldConstraint.Part0 = item.Plane
	item.WeldConstraint.Part1 = Handle
	item.Plane.CanCollide = false
	
	return Handle
end

function item:RemoveHandle(item)
	local Handle = item:FindFirstChild("Handle")
	if Handle then
		Handle:Destroy()
	end
end

function item:Press(player, itemObject)
	self.object:m_SetItem(player, itemObject)
	self.Triggered:Disconnect()
	self.Prompt:Destroy()
	
	self:CreateHandle(itemObject)
	self:AssignToItemsActive(player, itemObject)
end

function item:AssignToItemsActive(player, item)
	self.itemsActive[player.Name] = {player, item}
end

return item
